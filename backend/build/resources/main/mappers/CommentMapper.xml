<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="project.goboogie.repository.comment.CommentMapper">

    <!-- CommentResultMap: Comment 객체와 데이터베이스 테이블의 컬럼을 매핑 -->
    <resultMap id="CommentResultMap" type="project.goboogie.domain.Comment">
        <id property="commentId" column="comment_id"/>
        <result property="postId" column="post_id"/>
        <result property="userId" column="user_id"/>
        <result property="commentText" column="comment_text"/>
        <result property="createdAt" column="created_at"/>
    </resultMap>

    <!-- save: Comment 객체를 데이터베이스에 저장 -->
    <insert id="save" parameterType="project.goboogie.domain.Comment">
        INSERT INTO comments (post_id, user_id, comment_text, created_at)
        VALUES (#{postId}, #{userId}, #{commentText}, NOW())
    </insert>

    <!-- findById: commentId로 Comment 객체를 조회 -->
    <select id="findById" parameterType="int" resultMap="CommentResultMap">
        SELECT * FROM comments WHERE comment_id = #{commentId}
    </select>

    <!-- findByPostId: postId로 Comment 목록을 조회 -->
    <select id="findByPostId" parameterType="int" resultMap="CommentResultMap">
        SELECT * FROM comments WHERE post_id = #{postId}
    </select>

    <!-- findAll: 모든 Comment 객체를 조회 -->
    <select id="findAll" resultMap="CommentResultMap">
        SELECT * FROM comments
    </select>

    <!-- update: Comment 객체를 업데이트 -->
    <update id="update" parameterType="project.goboogie.domain.Comment">
        UPDATE comments
        SET post_id = #{postId}, user_id = #{userId}, comment_text = #{commentText}, created_at = #{createdAt}
        WHERE comment_id = #{commentId}
    </update>

    <!-- deleteById: commentId로 Comment 객체를 삭제 -->
    <delete id="deleteById" parameterType="int">
        DELETE FROM comments WHERE comment_id = #{commentId}
    </delete>

</mapper>
